<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <ResonitePath Condition="'$(ResonitePath)' == ''">G:\SteamLibrary\steamapps\common\Resonite</ResonitePath>
    <ManagedDir Condition="'$(ManagedDir)' == ''">$(ResonitePath)\Renderer\Renderite.Renderer_Data\Managed</ManagedDir>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Properties\AssemblyInfo.cs" />
  </ItemGroup>

  <Choose>
    <When Condition="Exists('$(ResonitePath)\rml_libs\0Harmony.dll')">
      <PropertyGroup><HarmonyPath>$(ResonitePath)\rml_libs\0Harmony.dll</HarmonyPath></PropertyGroup>
    </When>
    <When Condition="Exists('$(ResonitePath)\rml_libs\HarmonyLib.dll')">
      <PropertyGroup><HarmonyPath>$(ResonitePath)\rml_libs\HarmonyLib.dll</HarmonyPath></PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup><HarmonyPath></HarmonyPath></PropertyGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition="Exists('$(ResonitePath)\Libraries\ResoniteModLoader.dll')">
      <PropertyGroup><RmlPath>$(ResonitePath)\Libraries\ResoniteModLoader.dll</RmlPath></PropertyGroup>
    </When>
    <When Condition="Exists('$(ResonitePath)\ResoniteModLoader.dll')">
      <PropertyGroup><RmlPath>$(ResonitePath)\ResoniteModLoader.dll</RmlPath></PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup><RmlPath></RmlPath></PropertyGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition="Exists('$(ResonitePath)\Elements.Core.dll')">
      <PropertyGroup><ElementsCorePath>$(ResonitePath)\Elements.Core.dll</ElementsCorePath></PropertyGroup>
    </When>
    <When Condition="Exists('$(ResonitePath)\Libraries\Elements.Core.dll')">
      <PropertyGroup><ElementsCorePath>$(ResonitePath)\Libraries\Elements.Core.dll</ElementsCorePath></PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup><ElementsCorePath></ElementsCorePath></PropertyGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition="Exists('$(ResonitePath)\FrooxEngine.dll')">
      <PropertyGroup><FrooxPath>$(ResonitePath)\FrooxEngine.dll</FrooxPath></PropertyGroup>
    </When>
    <When Condition="Exists('$(ResonitePath)\Libraries\FrooxEngine.dll')">
      <PropertyGroup><FrooxPath>$(ResonitePath)\Libraries\FrooxEngine.dll</FrooxPath></PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup><FrooxPath></FrooxPath></PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup Condition="'$(HarmonyPath)' != ''">
    <Reference Include="0Harmony">
      <HintPath>$(HarmonyPath)</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="'$(RmlPath)' != ''">
    <Reference Include="ResoniteModLoader">
      <HintPath>$(RmlPath)</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="'$(ElementsCorePath)' != ''">
    <Reference Include="Elements.Core">
      <HintPath>$(ElementsCorePath)</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="'$(FrooxPath)' != ''">
    <Reference Include="FrooxEngine">
      <HintPath>$(FrooxPath)</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

<ItemGroup>
  <Reference Include="UnityEngine.CoreModule">
    <HintPath>$(ManagedDir)\UnityEngine.CoreModule.dll</HintPath>
    <Private>false</Private>
  </Reference>
  <Reference Include="UnityEngine.AssetBundleModule">
    <HintPath>$(ManagedDir)\UnityEngine.AssetBundleModule.dll</HintPath>
    <Private>false</Private>
  </Reference>
</ItemGroup>

<ItemGroup Condition="Exists('$(ManagedDir)\UnityEngine.SceneManagementModule.dll')">
  <Reference Include="UnityEngine.SceneManagementModule">
    <HintPath>$(ManagedDir)\UnityEngine.SceneManagementModule.dll</HintPath>
    <Private>false</Private>
  </Reference>
</ItemGroup>


<Target Name="EchoUnityPaths" BeforeTargets="Compile">
  <Message Importance="High" Text="ManagedDir=$(ManagedDir)" />
  <Message Importance="High" Text="CoreModule Exists=$([System.IO.File]::Exists('$(ManagedDir)\UnityEngine.CoreModule.dll'))" />
  <Message Importance="High" Text="AssetBundle Exists=$([System.IO.File]::Exists('$(ManagedDir)\UnityEngine.AssetBundleModule.dll'))" />
  <Message Importance="High" Text="SceneManagement Exists=$([System.IO.File]::Exists('$(ManagedDir)\UnityEngine.SceneManagementModule.dll'))" />
</Target>



  <Target Name="PostBuildCopy" AfterTargets="Build">
    <Copy SourceFiles="$(TargetDir)$(TargetFileName)"
          DestinationFolder="$(ResonitePath)\rml_mods\" />
  </Target>
</Project>
